{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\skale\\\\Documents\\\\Projects\\\\HarvardCS50M2020MobileApp-React\\\\ContactsMobileApp\\\\ContactsList.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport PropTypes from 'prop-types';\nimport Row from \"./Row\";\n\nvar renderItem = function renderItem(obj) {\n  return React.createElement(Row, _extends({}, obj.item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 27\n    }\n  }));\n};\n\nvar renderSectionHeader = function renderSectionHeader(obj) {\n  return React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 36\n    }\n  }, obj.section.title);\n};\n\nvar ContactsList = function ContactsList(props) {\n  var contactsByLetter = props.contacts.reduce(function (obj, contact) {\n    var firstLetter = contact.name[0].toUpperCase();\n    return _objectSpread(_objectSpread({}, obj), {}, _defineProperty({}, firstLetter, [].concat(_toConsumableArray(obj[firstLetter] || []), [contact])));\n  }, {});\n  var sections = Object.keys(contactsByLetter).sort().map(function (letter) {\n    return {\n      title: letter,\n      data: contactsByLetter[letter]\n    };\n  });\n  return React.createElement(SectionList, {\n    renderItem: renderItem,\n    renderSectionHeader: renderSectionHeader,\n    sections: sections,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  });\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.array\n};\nexport default ContactsList;","map":{"version":3,"sources":["C:/Users/skale/Documents/Projects/HarvardCS50M2020MobileApp-React/ContactsMobileApp/ContactsList.js"],"names":["React","PropTypes","Row","renderItem","obj","item","renderSectionHeader","section","title","ContactsList","props","contactsByLetter","contacts","reduce","contact","firstLetter","name","toUpperCase","sections","Object","keys","sort","map","letter","data","propTypes","array"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,GAAG;AAAA,SAAI,oBAAC,GAAD,eAASA,GAAG,CAACC,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAJ;AAAA,CAAtB;;AAGA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAF,GAAG;AAAA,SAAI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,GAAG,CAACG,OAAJ,CAAYC,KAAnB,CAAJ;AAAA,CAA/B;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAC5B,MAAMC,gBAAgB,GAAGD,KAAK,CAACE,QAAN,CAAeC,MAAf,CAAsB,UAACT,GAAD,EAAMU,OAAN,EAAkB;AAC/D,QAAMC,WAAW,GAAGD,OAAO,CAACE,IAAR,CAAa,CAAb,EAAgBC,WAAhB,EAApB;AACA,2CACKb,GADL,2BAEGW,WAFH,+BAEsBX,GAAG,CAACW,WAAD,CAAH,IAAoB,EAF1C,IAE+CD,OAF/C;AAID,GANwB,EAMtB,EANsB,CAAzB;AAQA,MAAMI,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYT,gBAAZ,EAA8BU,IAA9B,GAAqCC,GAArC,CAAyC,UAAAC,MAAM;AAAA,WAAM;AACpEf,MAAAA,KAAK,EAAEe,MAD6D;AAEpEC,MAAAA,IAAI,EAAEb,gBAAgB,CAACY,MAAD;AAF8C,KAAN;AAAA,GAA/C,CAAjB;AAKA,SACE,oBAAC,WAAD;AACE,IAAA,UAAU,EAAEpB,UADd;AAEE,IAAA,mBAAmB,EAAEG,mBAFvB;AAGE,IAAA,QAAQ,EAAIY,QAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAOD,CArBD;;AAuBAT,YAAY,CAACgB,SAAb,GAAyB;AACvBb,EAAAA,QAAQ,EAAEX,SAAS,CAACyB;AADG,CAAzB;AAIA,eAAejB,YAAf","sourcesContent":["import React from 'react';\r\nimport {SectionList, Text} from 'react-native';\r\nimport PropTypes from 'prop-types';\r\nimport Row from './Row';\r\n\r\n// renderItem = obj => <Row name={obj.item.name} phone={obj.item.phone} />\r\nconst renderItem = obj => <Row {...obj.item} />\r\n// renderItem = ({item}) => <Row {...item} />\r\n\r\nconst renderSectionHeader = obj => <Text>{obj.section.title}</Text>\r\n\r\nconst ContactsList = props => {\r\n  const contactsByLetter = props.contacts.reduce((obj, contact) => {\r\n    const firstLetter = contact.name[0].toUpperCase();\r\n    return {\r\n      ...obj,\r\n      [firstLetter]: [...(obj[firstLetter] || []), contact],\r\n    }\r\n  }, {})\r\n\r\n  const sections = Object.keys(contactsByLetter).sort().map(letter => ( {\r\n    title: letter,\r\n    data: contactsByLetter[letter]\r\n  }))\r\n\r\n  return (\r\n    <SectionList\r\n      renderItem={renderItem}\r\n      renderSectionHeader={renderSectionHeader}\r\n      sections = {sections}>\r\n    </SectionList>\r\n  )\r\n}\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array\r\n}\r\n\r\nexport default ContactsList;\r\n"]},"metadata":{},"sourceType":"module"}